# サイト名
site_name: 俺の技術ノート

# サイト所有者
site_author: Hiroki Hasegawa

# サイトのURL
site_url: https://hiroki-it.github.io/tech-notebook-mkdocs/

# 説明
site_description: 俺（長谷川広樹）が、業務や学習から得た技術的な知見をドキュメント形式で記録したサイトです。

# リポジトリ
repo_name: GitHubアカウントはこちら
repo_url: https://github.com/hiroki-it/

# テーマ
theme:
  name: material
  language: ja
  logo: assets/images/logo_v2.png
  favicon: assets/images/logo_v2.png
  icon:
    repo: fontawesome/brands/github
  font:
    # Google-APIからフォントをインストール
    # @see https://fonts.google.com/
    text: "Noto Sans Japanese"
    code: "Noto Sans Mono"
  palette:
    scheme: dark
  features:
    - navigation.expand
    - navigation.tabs
    - navigation.tabs.sticky
    - navigation.top
    - navigation.tracking
    - search.highlight
    - search.suggest

# URL形式
use_directory_urls: false

extra:
  analytics:
    provider: google
    property: G-HPJGWKTH9W
  generator: false
  homepage: https://hiroki-it.github.io/tech-notebook-mkdocs/
  social:
    - icon: fontawesome/brands/github
      link: https://github.com/hiroki-it
      name: GitHubアカウント
    - icon: fontawesome/brands/twitter
      link: https://twitter.com/Hiroki__IT
      name: Twitterアカウント

# CSS
extra_css:
  - assets/css/custom.css
  - "https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"

# 標準プラグイン
markdown_extensions:
  # コードブロックのハイライト化
  - pymdownx.highlight:
      pygments_style: monokai
      linenums: true
  - pymdownx.superfences
  # URLテキストのリンク化
  - pymdownx.magiclink
  # 見出しのリンク
  - toc:
      permalink: true
  # メタタグの有効化
  - meta

# 外部プラグイン
plugins:
  - exclude:
      glob:
        - ./private
        - ./**/draft
  - git-revision-date-localized:
      type: iso_date
      timezone: Asia/Tokyo
  - search:
      lang:
        - ja
        - en
      separator: '[\s\-\.]'

# ナビゲーション
nav:
  - 目次: index.md

  - 当サイトについて: about.md

  - 自己紹介: self_introduction.md

  - 🌳 システム:
      - システム: system/system.md

  - 🧬 ソフトウェア:
      - ソフトウェア: software/software.md
      - ■ 基本ソフトウェア（OS）:
          - ■ カーネル:
              - カーネル: software/software_basic_kernel.md
              - メモリ管理: software/software_basic_kernel_memory_management.md
              - ファイル共有システム: software/software_basic_kernel_file_share_system.md
          - ■ ユーティリティ:
              - ユーティリティ: software/software_basic_utility.md
              - パッケージ: software/software_basic_utility_package.md
              - パッケージ管理ユーティリティ: software/software_basic_utility_package_management.md
              - シェル: software/software_basic_utility_shell.md
              - スクリプト: software/software_basic_utility_script.md
          - ■ 言語プロセッサ:
              - 言語プロセッサ: software/software_basic_language_processor.md
              - 機械語と進数: software/software_basic_language_processor_machine_language_and_radix.md
      - ■ ミドルウェア:
          - Linux系: software/software_middleware_linux.md
          - ■ Web系:
              - ■ Nginx:
                  - nginx.conf: software/software_middleware_web_nginx_conf.md
                  - コマンド: software/software_middleware_web_nginx_command.md
              - ■ Apache:
                  - apache.conf: software/software_middleware_web_apache_conf.md
                  - コマンド: software/software_middleware_web_apache_command.md
          - ■ アプリケーション系:
              - GI: software/software_middleware_application_gi.md
              - ■ FastCGI:
                  - PHP-FPM: software/software_middleware_application_gi_fastcgi_php_fpm.md
              - ■ WSGI:
                  - uWSGI: software/software_middleware_application_gi_wsgi_uwsgi.md
              - ■ ASGI:
                  - Uvicorn: software/software_middleware_application_gi_asgi_uvicorn.md
          - ■ データベース系:
              - ■ RDBMS:
                  - RDBMS: software/software_middleware_database_rdbms.md
                  - ACID: software/software_middleware_database_rdbms_acid.md
                  - ■ My︎SQL:
                      - MySQL: software/software_middleware_database_rdbms_mysql.md
                      - クエリロジック: software/software_middleware_database_rdbms_mysql_query.md
          - ■ サービスメッシュ系:
              - ■ Envoy:
                  - envoy.yaml: software/software_middleware_service_mesh_envoy_envoy_yaml.md
      - ■ アプリケーションソフトウェア:
          - ■ アーキテクチャ:
              - オブジェクト指向分析設計: software/software_application_architecture_analysis_and_design.md
              - ■ バックエンド:
                  - マイクロサービスアーキテクチャ: software/software_application_architecture_backend_microservices.md
                  - ドメイン駆動設計: software/software_application_architecture_backend_domain_driven_design.md
                  - クリーンアーキテクチャ: software/software_application_architecture_backend_domain_driven_design_clean_architecture.md
                  - CQRS: software/software_application_architecture_backend_cqrs.md
              - ■ フロントエンド:
                  - フロントエンドアーキテクチャ: software/software_application_architecture_frontend.md
          - ■ アプリケーション間連携:
              - アプリケーション間通信: software/software_application_collaboration_communication.md
              - ■ RESTful-API:
                  - RESTful-API: software/software_application_collaboration_api_restful.md
                  - API仕様書: software/software_application_collaboration_api_restful_api_specification.md
              - gRPC: software/software_application_collaboration_grpc.md
          - ■ 言語:
              - 言語の種類: software/software_application_language_type.md
              - 言語別の処理方式: software/software_application_language_process_mode.md
              - ■ データ記述言語:
                  - データ記述言語: software/software_application_language_data_description_language.md
                  - ■ クエリロジック:
                      - JSONクエリ: software/software_application_language_data_description_language_query_json.md
              - ■ PHP:
                  - PHP: software/software_application_language_php.md
                  - コマンド: software/software_application_language_php_command.md
                  - ■ クラスベース:
                      - クラス: software/software_application_language_php_class_based.md
                      - メソッド/データ: software/software_application_language_php_class_based_method_data.md
                      - データ構造: software/software_application_language_php_class_based_data_structure.md
                  - ■ ロジック:
                      - 検証ロジック: software/software_application_language_php_logic_validation.md
                      - エラーとエラーハンドリング: software/software_application_language_php_logic_error_and_error_handling.md
                      - 反復ロジック: software/software_application_language_php_logic_iteration.md
                      - アルゴリズム: software/software_application_language_php_logic_algorithm.md
                      - デバッグ: software/software_application_language_php_logic_debug.md
                  - ■ フレームワーク:
                      - ■ Laravel:
                          - コンポーネント: software/software_application_language_php_framework_laravel_component.md
                          - ︎Eloquent ORM: software/software_application_language_php_framework_laravel_eloquent_orm.md
                          - 専用パッケージ: software/software_application_language_php_framework_laravel_package.md
                          - 認証/認可系パッケージ: software/software_application_language_php_framework_laravel_package_auth.md
                          - コマンド: software/software_application_language_php_framework_laravel_command.md
                      - ■ Symfony:
                          - コンポーネント: software/software_application_language_php_framework_symfony_component.md
                          - Doctrine ORM: software/software_application_language_php_framework_symfony_doctrine_orm.md
                  - ■ パッケージ:
                      - パッケージ管理: software/software_application_language_php_package_management.md
                      - SQLパッケージ: software/software_application_language_php_package_sql.md
                      - その他パッケージ: software/software_application_language_php_package_others.md
              - ■ JavaScript:
                  - ■ プロトタイプベース:
                      - プロトタイプ: software/software_application_language_js_prototype_based.md
                      - メソッド/データ: software/software_application_language_js_prototype_based_method_data.md
                  - ■ ロジック:
                      - 検証ロジック: software/software_application_language_js_logic_validation.md
                      - 非同期処理ロジック: software/software_application_language_js_logic_asynchronous_process.md
                      - デバッグ: software/software_application_language_js_logic_debug.md
                  - ■ フレームワーク:
                      - Vue.js: software/software_application_language_js_framework_vuejs.md
                      - Nuxt.js: software/software_application_language_js_framework_nuxtjs.md
                  - ■ パッケージ:
                      - パッケージ管理: software/software_application_language_js_package_management.md
                  - ■ ブラウザ:
                      - ブラウザレンダリング: software/software_application_language_js_browser_rendering.md
              - ■ Go:
                  - Go: software/software_application_language_go.md
                  - コマンド: software/software_application_language_go_command.md
                  - ■ ロジック:
                      - メソッド/データ: software/software_application_language_go_logic_method_data.md
                  - ■ フレームワーク:
                      - Gin: software/software_application_language_go_framework_gin.md
                  - ■ パッケージ:
                      - パッケージ: software/software_application_language_go_package.md
              - ■ Python:
                  - Python: software/software_application_language_python.md
                  - ■ フレームワーク:
                      - ■ Flask:
                          - コンポーネント: software/software_application_language_python_framework_flask_component.md
                          - コマンド: software/software_application_language_python_framework_flask_command.md
                  - ■ パッケージ:
                      - パッケージ管理: software/software_application_language_python_package_management.md

  - 🧪 テスト:
      - ■ ホワイトボックステスト:
          - ホワイトボックステスト: testing/testing_whitebox.md
          - PHP: testing/testing_whitebox_php.md
          - Go: testing/testing_whitebox_go.md
      - ■ ブラックボックステスト:
          - ブラックボックステスト: testing/testing_blackbox.md
          - ■ 総合テスト:
              - 総合テスト: testing/testing_blackbox_system_test.md
              - JMeter: testing/testing_blackbox_system_test_jmeter.md

  - 💻 ハードウェア:
      - ハードウェア: hardware/hardware.md
      - 組み込み機器: hardware/hardware_embedded_system.md

  - 🌏 ネットワーク:
      - ネットワーク: network/network.md
      - TCP階層モデル: network/network_model_tcp.md
      - OSI参照モデル: network/network_model_osi.md

  - 🔐 セキュリティ:
      - サイバー攻撃: security/security_cyber_attacks.md
      - 通信データの暗号化技術: security/security_encryption_technology.md
      - 認証/認可: security/security_authentication_authorization.md

  - ⛅️ クラウドコンピューティング:
      - クラウドコンピューティング: cloud_computing/cloud_computing.md
      - ■ AWS:
          - 目次: cloud_computing/cloud_computing_aws.md
          - A〜D: cloud_computing/cloud_computing_aws_1.md
          - E: cloud_computing/cloud_computing_aws_2.md
          - F〜K: cloud_computing/cloud_computing_aws_3.md
          - L〜R: cloud_computing/cloud_computing_aws_4.md
          - S〜U: cloud_computing/cloud_computing_aws_5.md
          - V〜Z: cloud_computing/cloud_computing_aws_6.md
          - ■ 設計ポリシー:
              - 信頼性: cloud_computing/cloud_computing_aws_policy_reliability.md
              - セキュリティ: cloud_computing/cloud_computing_aws_policy_security.md
              - コスト最適化: cloud_computing/cloud_computing_aws_policy_cost_optimization.md
          - ■ その他:
              - AWS CLI: cloud_computing/cloud_computing_aws_cli.md
              - API Gatewayへのymlインポート: cloud_computing/cloud_computing_aws_api_gateway_import.md
              - Lambda関数の実装: cloud_computing/cloud_computing_aws_lambda_function.md
      - ■ GCP:
          - コマンド: cloud_computing/cloud_computing_gcp_command.md
  - 📦 仮想化:
      - 仮想化: virtualization/virtualization.md
      - ■ コンテナ:
          - Docker: virtualization/virtualization_container_docker.md

  - ⚙️ IaC:
      - IaC: infrastructure_as_code/infrastructure_as_code.md
      - ■ 手続き型:
          - ■ Ansible:
              - 設定ファイル: infrastructure_as_code/infrastructure_as_code_ansible_conf.md
          - ■ Docker:
              - Dockerfile: infrastructure_as_code/infrastructure_as_code_docker_dockerfile.md
              - コマンド: infrastructure_as_code/infrastructure_as_code_docker_command.md
              - 設計ポリシー: infrastructure_as_code/infrastructure_as_code_docker_policy.md
      - ■ 宣言型:
          - ■ Docker Compose:
              - docker-compose.yml: infrastructure_as_code/infrastructure_as_code_docker_compose_yml.md
              - コマンド: infrastructure_as_code/infrastructure_as_code_docker_compose_command.md
          - ■ Kubernetes:
              - Kubernetes: infrastructure_as_code/infrastructure_as_code_kubernetes.md
              - リソース定義: infrastructure_as_code/infrastructure_as_code_kubernetes_resource_definition.md
              - コマンド: infrastructure_as_code/infrastructure_as_code_kubernetes_command.md
              - 設計ポリシー: infrastructure_as_code/infrastructure_as_code_kubernetes_policy.md
              - kubernetesアドオン: infrastructure_as_code/infrastructure_as_code_kubernetes_addon.md
              - ■ Helm:
                  - チャート: infrastructure_as_code/infrastructure_as_code_kubernetes_helm_chart.md
                  - コマンド: infrastructure_as_code/infrastructure_as_code_kubernetes_helm_command.md
                  - 設計ポリシー: infrastructure_as_code/infrastructure_as_code_kubernetes_helm_policy.md
                  - Helmfile: infrastructure_as_code/infrastructure_as_code_kubernetes_helm_helmfile.md
              - ■ Minikube:
                  - Minikube: infrastructure_as_code/infrastructure_as_code_kubernetes_minikube.md
                  - コマンド: infrastructure_as_code/infrastructure_as_code_kubernetes_minikube_command.md
              - ■ カスタムリソース:
                  - カスタムリソース: infrastructure_as_code/infrastructure_as_code_kubernetes_custom_resource.md
                  - ■ ArgoCD:
                      - リソース定義: infrastructure_as_code/infrastructure_as_code_kubernetes_custom_resource_argocd_resource_definition.md
                  - ■ Grafana:
                      - リソース定義: infrastructure_as_code/infrastructure_as_code_kubernetes_custom_resource_grafana_resource_definition.md
                  - ■ Istio:
                      - Istio: infrastructure_as_code/infrastructure_as_code_kubernetes_custom_resource_istio.md
                      - IstioOperator: infrastructure_as_code/infrastructure_as_code_kubernetes_custom_resource_istio_operator_resource_definition.md
                      - リソース定義: infrastructure_as_code/infrastructure_as_code_kubernetes_custom_resource_istio_resource_definition.md
                      - コマンド: infrastructure_as_code/infrastructure_as_code_kubernetes_custom_resource_istio_command.md
                  - ■ Prometheus:
                      - Prometheus: infrastructure_as_code/infrastructure_as_code_kubernetes_custom_resource_prometheus.md
                      - リソース定義: infrastructure_as_code/infrastructure_as_code_kubernetes_custom_resource_prometheus_resource_definition.md
                  - ■ SecretProviderClass:
                      - SecretProviderClass: infrastructure_as_code/infrastructure_as_code_kubernetes_custom_resource_secret_provider_class.md
                      - リソース定義: infrastructure_as_code/infrastructure_as_code_kubernetes_custom_resource_secret_provider_class_resource_definition.md
                  - ■ VictoriaMetrics:
                      - VictoriaMetrics: infrastructure_as_code/infrastructure_as_code_kubernetes_custom_resource_victoria_metrics.md
          - ■ Packer:
              - template.json: infrastructure_as_code/infrastructure_as_code_packer_template_json.md
          - ■ Serverless Framework:
              - serverless.yml: infrastructure_as_code/infrastructure_as_code_serverless_framework_serverless_yml.md
              - コマンド: infrastructure_as_code/infrastructure_as_code_serverless_framework_serverless_command.md
          - ■ Terraform:
              - コマンド: infrastructure_as_code/infrastructure_as_code_terraform_command.md
              - 設計ポリシー: infrastructure_as_code/infrastructure_as_code_terraform_policy.md
              - CI/CDパイプライン: infrastructure_as_code/infrastructure_as_code_terraform_ci_cd_pipeline.md
              - ■ tfファイル:
                  - tfファイル: infrastructure_as_code/infrastructure_as_code_terraform_tf.md
                  - AWSプロバイダー: infrastructure_as_code/infrastructure_as_code_terraform_tf_aws_provider.md
          - ■ Vagrant:
              - Vagrantfile: infrastructure_as_code/infrastructure_as_code_vagrant_vagrantfile.md
              - コマンド: infrastructure_as_code/infrastructure_as_code_vagrant_command.md
  - ♾️ DevOps:
      - DevOps: devops/devops.md
      - GitHub Actions: devops/devops_github_actions.md
      - GitLab CI: devops/devops_gitlab_ci.md
      - Capistrano: devops/devops_capistrano.md
      - ■ CircleCI:
          - config.yml: devops/devops_circleci_config_yml.md
          - orbs: devops/devops_circleci_orbs.md
      - ■ ArgoCD:
          - リソース定義: devops/devops_argocd_resource_definition.md
          - 設計ポリシー: devops/devops_argocd_policy.md
      - ■ Skaffold:
          - skaffold.yaml: devops/devops_skaffold_yaml.md
          - コマンド: devops/devops_skaffold_command.md

  - 🔎 可観測性:
      - 可観測性: observability/observability.md
      - ■ 監視:
          - 監視: observability/observability_monitoring.md
          - オンコールとインシデント管理: observability/observability_monitoring_oncall_incident_management.md
          - サービスレベル: observability/observability_monitoring_service_level.md
      - ■ テレメトリー収集ツール:
          - テレメトリー収集ツール: observability/observability_telemetry.md
          - ■ Googleアプリ:
              - Googleアナリティクス: observability/observability_telemetry_google_analytics.md
              - Googleサーチコンソール: observability/observability_telemetry_google_search_console.md
          - ■ FluentBit/Fluentd:
              - FluentBit vs. Fluentd: observability/observability_telemetry_fluentbit_vs_fluentd.md
              - FluentBit: observability/observability_telemetry_fluentbit.md
              - FireLensコンテナ: observability/observability_telemetry_fluentbit_firelens.md
          - ■ Datadog:
              - datadogエージェントの設定: observability/observability_telemetry_datadog_agent_conf.md
              - 監視: observability/observability_telemetry_datadog_monitoring.md
              - インテグレーション: observability/observability_telemetry_datadog_integration.md
              - ■ テレメトリー収集:
                  - メトリクス収集: observability/observability_telemetry_datadog_metrics.md
                  - ログ収集: observability/observability_telemetry_datadog_log.md
                  - 分散トレース収集: observability/observability_telemetry_datadog_distributed_trace.md
                  - テレメトリー間の紐づけ: observability/observability_telemetry_datadog_telemetry_association.md
  - 👥 ソフトウェア開発手法論/SREing:
      - ソフトウェア開発手法論: software_development_methodology/software_development_methodology.md
      - プロジェクト管理: software_development_methodology/software_development_methodology_project_management.md
      - ■ SREing:
          - SREing: software_development_methodology/software_development_methodology_site_reliability_engineering.md
          - アンチパターン: software_development_methodology/software_development_methodology_site_reliability_engineering_antipattern.md
          - ドキュメンテーション: software_development_methodology/software_development_methodology_site_reliability_engineering_documentation.md

  - 🦶 バージョン管理:
      - ■ Git:
          - コマンド: version_control/version_control_git_command.md
          - GitHub: version_control/version_control_git_github.md

  - 📊 統計分析:
      - R: statistic_analysis/statistic_analysis_r.md

  - 📢 過去の技術系プレゼン:
      - 一覧: presentation.md

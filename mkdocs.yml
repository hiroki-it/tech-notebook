# サイト名
site_name: 俺の技術ノート

# サイト所有者
site_author: Hiroki Hasegawa

# サイトのURL
site_url: https://hiroki-it.github.io/tech-notebook/

# 説明
site_description: 俺 (長谷川広樹) が、業務や学習から得た技術的な知見をドキュメント形式で記録したサイトです。

# リポジトリ
repo_name: GitHubアカウントはこちら
repo_url: https://github.com/hiroki-it/

# テーマ
theme:
  name: material
  language: ja
  logo: assets/images/logo_v2.png
  favicon: assets/images/logo_v2.png
  # テンプレートを読み込む
  # 部分的にテンプレートを挿入する場合、templates配下にpartialsディレクトリを作成する
  # custom_dir: docs/assets/templates/
  icon:
    repo: fontawesome/brands/github
  font:
    # Google-APIからフォントをインストール
    # @see https://fonts.google.com/
    text: "Noto Sans Japanese"
    code: "Noto Sans Mono"
  palette:
    scheme: dark
  features:
    - navigation.expand
    - navigation.instant
    - navigation.instant.progress
    - navigation.path
    - navigation.tabs
    - navigation.tabs.sticky
    - navigation.top
    - navigation.tracking
    - navigation.indexes
    - search.suggest
    - toc.follow

# URL形式
use_directory_urls: false

extra:
  analytics:
    provider: google
    property: G-HPJGWKTH9W
  generator: false
  homepage: https://hiroki-it.github.io/tech-notebook/
  social:
    - icon: fontawesome/brands/github
      link: https://github.com/hiroki-it
      name: GitHubアカウント
    - icon: fontawesome/brands/twitter
      link: https://twitter.com/Hiroki__IT
      name: Twitterアカウント

# CSS
extra_css:
  - assets/css/custom.css
  - "https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"

# highlight.jsを使用する場合は、以下のコメントアウトを外す。
#  # VSCodeのダークテーマを使用する
#  - "https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0/styles/vs2015.min.css"
#extra_javascript:
#  # highlight.jsを読み込む
#  - "https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0/highlight.min.js"
#  - javascripts/config.js

# 標準プラグイン
markdown_extensions:
  # コードブロックのハイライト化
  - pymdownx.highlight:
      # highlight.jsを使用する場合は、falseにする。
      use_pygments: true
      # pygmentsのテーマ名は以下で選択できるが、機能しない...
      # https://github.com/pygments/pygments/blob/master/pygments/styles/__init__.py#L16
  - pymdownx.superfences:
      custom_fences:
        # Mermaidの有効化
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format
  - pymdownx.inlinehilite
  # URLテキストのリンク化
  - pymdownx.magiclink
  # 目次の設定
  # https://squidfunk.github.io/mkdocs-material/setup/extensions/python-markdown/?h=conten#table-of-contents
  - toc:
      title: 'このページの内容'
      permalink: true
      toc_depth: 4
  # メタタグの有効化
  - meta
  # htmlタグの有効化
  - md_in_html
  # 注釈表示
  - admonition
  - pymdownx.details
  # 定義リスト
  - def_list
  - mdx_truly_sane_lists

# 外部プラグイン
plugins:
  #  - git-committers:
  #      repository: hiroki-it/tech-notebook
  #      branch: main
  #      # トークンはレートリミット回避のためだけに使用し、スコープはない
  #      # そのため、ハードコーディングしてしまっても脆弱性に問題はないとする
  #      token: !ENV ["MKDOCS_GIT_COMMITTERS_APIKEY", "<パブリックリポジトリの読み取り権限を持つトークン>"]
  - git-revision-date-localized:
      type: iso_date
      timezone: Asia/Tokyo
  - search:
      lang:
        - ja
        - en
  # サブディレクトリをまとめて除外する
  # @see https://squidfunk.github.io/mkdocs-material/blog/2021/09/26/excluding-content-from-search/
  - exclude-search:
      exclude:
        - "*/draft/*"

# ナビゲーション
nav:
  - はじめに: index.md

  - ✊🏻 俺: about.md

  - 🌳 システム:
      - system/index.md
      - システム: system/system.md
      - アーキテクチャ特性: system/system_architecture_characteristics.md

  - 🧬 ソフトウェア:
      - software/index.md
      - ソフトウェア: software/software.md
      - プラクティス集: software/software_practices.md

  - 🚀 アプリ:
      - software/application/index.md
      - アーキテクチャ: software/software_application_architecture.md
      - ■ バックエンドアーキテクチャ:
          - ■ オブジェクト指向:
              - オブジェクト指向: software/software_application_architecture_backend_object_orientation.md
              - オブジェクト指向分析: software/software_application_architecture_backend_object_orientation_analysis.md
              - オブジェクト指向設計: software/software_application_architecture_backend_object_orientation_design.md
          - ドメイン駆動設計: software/software_application_architecture_backend_domain_driven_design.md
          - クリーンアーキテクチャ: software/software_application_architecture_backend_domain_driven_design_clean_architecture.md
          - CQRS: software/software_application_architecture_backend_cqrs.md
      - ■ フロントエンドアーキテクチャ:
          - フロントエンドアーキテクチャ: software/software_application_architecture_frontend.md
      - ■ マイクロサービスアーキテクチャ:
          - マイクロサービスアーキテクチャ: software/software_application_architecture_microservices.md
          - 認証/認可: software/software_application_architecture_microservices_auth.md
          - DB: software/software_application_architecture_microservices_database.md
          - ネットワーク: software/software_application_architecture_microservices_network.md
          - セキュリティ: software/software_application_architecture_microservices_security.md
          - ホワイトボックステスト: software/software_application_architecture_microservices_test_blackbox.md
          - ブラックボックステスト: software/software_application_architecture_microservices_test_whitebox.md
          - 開発手法: software/software_application_architecture_microservices_development.md
      - ■ 通信方式:
          - リクエスト/レスポンス方式: software/software_application_communication_style_request_response.md
      - ■ API:
          - ■ RESTful-API:
              - RESTful-API: software/software_application_api_restful.md
              - API仕様書: software/software_application_api_restful_api_specification.md
          - ■ RPC-API:
              - gRPC: software/software_application_api_rpc_api_grpc.md
              - ■ クライアントパッケージ:
                  - Go: software/software_application_api_rpc_api_grpc_client_package_go.md
          - ■ GraphQL-API:
              - GraphQL: software/software_application_api_graphql_api_graphql.md
      - ■ ワークフロー:
          - ■ Argo Workflows:
              - Argo Workflows: software/software_application_workflow_argoworkflow.md
              - リソース定義: software/software_application_workflow_argoworkflow_resource_definition.md
          - ■ Temporal:
              - Temporal: software/software_application_workflow_temporal.md
              - ■ 設定ファイル:
                  - Clusterスコープ: software/software_application_workflow_temporal_conf_cluster.md
                  - Webスコープ: software/software_application_workflow_temporal_conf_web.md
  - 🤝🏻 ミドルウェア:
      - software/middleware/index.md
      - ■ Web系:
          - ■ Nginx:
              - Nginx: software/software_middleware_web_nginx.md
              - nginx.conf: software/software_middleware_web_nginx_conf.md
              - コマンド: software/software_middleware_web_nginx_command.md
              - ビルトインモジュール: software/software_middleware_web_nginx_module_builtin.md
              - ユーティリティモジュール: software/software_middleware_web_nginx_module_utility.md
          - ■ Apache:
              - Apache: software/software_middleware_web_apache.md
              - apache.conf: software/software_middleware_web_apache_conf.md
              - コマンド: software/software_middleware_web_apache_command.md
      - ■ アプリケーション系:
          - ■ PHP-FPM:
              - PHP-FPM: software/software_middleware_application_gi_fastcgi_php_fpm.md
              - 設定ファイル: software/software_middleware_application_gi_fastcgi_php_fpm_conf.md
          - ■ uWSGI:
              - uWSGI: software/software_middleware_application_gi_wsgi_uwsgi.md
              - 設定ファイル: software/software_middleware_application_gi_wsgi_uwsgi_conf.md
          - Uvicorn: software/software_middleware_application_gi_asgi_uvicorn.md
      - ■ リレーショナルデータベース系:
          - ■ RDBMS:
              - RDBMS: software/software_middleware_database_rdb_rdbms.md
              - プラクティス集: software/software_middleware_database_rdb_rdbms_practices.md
              - ACID: software/software_middleware_database_rdb_rdbms_acid.md
          - ■ My︎SQL:
              - MySQL: software/software_middleware_database_rdb_mysql.md
              - 設定ファイル: software/software_middleware_database_rdb_mysql_conf.md
              - ■ SQL:
                  - DML: software/software_middleware_database_rdb_mysql_sql_dml.md
                  - DCL: software/software_middleware_database_rdb_mysql_sql_dcl.md
                  - DDL: software/software_middleware_database_rdb_mysql_sql_ddl.md
          - ■ PostgreSQL:
              - 設定ファイル: software/software_middleware_database_rdb_postgresql_conf.md
              - Repmgr: software/software_middleware_database_rdb_postgresql_repmgr.md
      - ■ NoSQL DB系:
          - NoSQL DB: software/software_middleware_database_nosqldb.md
          - Redis: software/software_middleware_database_nosqldb_redis.md
      - ■ コネクションプールプロキシ系:
          - ■ PgBouncer:
              - PgBouncer: software/software_middleware_database_connection_pool_proxy_pgbouncer.md
              - 設定ファイル: software/software_middleware_database_connection_pool_proxy_pgbouncer_conf.md
      - ■ 時系列データベース系:
          - TSDB: software/software_middleware_database_tsdb.md
          - ■ VictoriaMetrics:
              - VictoriaMetrics: software/software_middleware_database_tsdb_victoriametrics.md
              - コマンド: software/software_middleware_database_tsdb_victoriametrics_command.md
      - ■ サービスメッシュ系:
          - ■ サービスメッシュ:
              - サービスメッシュ: software/software_middleware_service_mesh.md
              - サービスメッシュの担う責務: software/software_middleware_service_mesh_responsibility.md
          - ■ Envoy:
              - Envoy: software/software_middleware_service_mesh_envoy.md
              - envoy.yaml: software/software_middleware_service_mesh_envoy_envoy_yaml.md
              - テレメトリー: software/software_middleware_service_mesh_envoy_telemetry.md
              - API: software/software_middleware_service_mesh_envoy_api.md
              - プラクティス: software/software_middleware_service_mesh_envoy_practice.md
          - ■ Istio:
              - Istio: software/software_middleware_service_mesh_istio.md
              - コントロールプレーン: software/software_middleware_service_mesh_istio_control_plane.md
              - データプレーン: software/software_middleware_service_mesh_istio_data_plane.md
              - Istioを採用しない場合との比較: software/software_middleware_service_mesh_istio_non.md
              - コマンド: software/software_middleware_service_mesh_istio_command.md
              - プラクティス集: software/software_middleware_service_mesh_istio_practices.md
              - IstioOperator: software/software_middleware_service_mesh_istio_operator_resource_definition.md
              - ■ リソース:
                  - リソース: software/software_middleware_service_mesh_istio_resource.md
                  - ■ リソース定義:
                      - リソース定義: software/software_middleware_service_mesh_istio_resource_definition.md
                      - メタデータ: software/software_middleware_service_mesh_istio_resource_definition_common.md
                      - ConfigMap系: software/software_middleware_service_mesh_istio_resource_definition_configmap.md
                      - Secret系: software/software_middleware_service_mesh_istio_resource_definition_secret.md
      - ■ DNS系:
          - ■ CoreDNS:
              - CoreDNS: software/software_middleware_dns_coredns.md
              - 設定ファイル: software/software_middleware_dns_coredns_conf.md
      - ■ セキュリティ系:
          - ■ Cert Manager:
              - Cert Manager: software/software_middleware_security_cert_manager.md
              - リソース定義: software/software_middleware_security_cert_manager_resource_definition.md
          - ■ Falco:
              - Falco: software/software_middleware_security_falco.md
              - 設定ファイル: software/software_middleware_security_falco_conf.md
          - ■ Keycloak:
              - Keycloak: software/software_middleware_security_keycloak.md
              - ■ クライアントパッケージ:
                  - JavaScript: software/software_middleware_security_keycloak_client_package_javascript.md
          - ■ OAuth2 Proxy:
              - OAuth2 Proxy: software/software_middleware_security_oauth2_proxy.md
              - 設定ファイル: software/software_middleware_security_oauth2_proxy_conf.md
      - ■ メッセージング系:
          - メッセージング: software/software_middleware_messaging.md
          - ■ ブローカー系:
              - RabbitMQ: software/software_middleware_messaging_message_broker_rabbitmq.md
          - ■ ストリーマー系:
              - Kafka: software/software_middleware_messaging_message_streamer_kafka.md
  - 🐧 OS:
      - software/basic/index.md
      - ■ Linuxカーネル:
          - Linuxカーネル: software/software_basic_linux_kernel.md
          - プロセス管理: software/software_basic_linux_kernel_process_management.md
          - メモリ管理: software/software_basic_linux_kernel_memory_management.md
          - ストレージ管理: software/software_basic_linux_kernel_storage_management.md
          - I/O (入出力) 管理: software/software_basic_linux_kernel_io_management.md
          - ジョブ管理: software/software_basic_linux_kernel_job_management.md
          - セキュリティ管理: software/software_basic_linux_kernel_security_management.md
      - ■ ユーティリティ:
          - ユーティリティ: software/software_basic_utility.md
          - Unix系標準ユーティリティ: software/software_basic_utility_unix.md
          - シェル: software/software_basic_utility_shell.md
          - スクリプト: software/software_basic_utility_script.md
          - ■ パッケージ:
              - メモリ系: software/software_basic_utility_package_memory.md
              - ネットワーク系: software/software_basic_utility_package_network.md
              - セキュリティ系: software/software_basic_utility_package_security.md
              - ストレージ系: software/software_basic_utility_package_storage.md
          - ■ パッケージ管理ユーティリティ:
              - パッケージ管理ユーティリティ: software/software_basic_utility_package_management.md
              - Linux系: software/software_basic_utility_package_management_linux.md
              - RedHat系: software/software_basic_utility_package_management_redhat.md
              - Debian系: software/software_basic_utility_package_management_debian.md
      - ■ 言語プロセッサ:
          - 言語プロセッサ: software/software_basic_language_processor.md
          - 機械語と進数: software/software_basic_language_processor_machine_language_and_radix.md

  - 🔠 言語:
      - language/index.md
      - 言語の種類: language/language_type.md
      - 言語別の処理方式: language/language_process_mode.md
      - ■ データ記述言語:
          - ■ JSON:
              - JSON: language/language_data_description_language_json.md
              - JSONクエリ: language/language_data_description_language_json_query.md
          - ■ YAML:
              - YAML: language/language_data_description_language_yaml.md
          - ■ Protocol Buffer:
              - Protocol Buffer: language/language_data_description_language_protocol_buffer.md
              - コマンド: language/language_data_description_language_protocol_buffer_command.md
              - ■ Protocol Bufferコンパイラー:
                  - Goプラグイン: language/language_data_description_language_protocol_buffer_compiler_go.md
      - ■ PHP:
          - PHP: language/language_php.md
          - コマンド: language/language_php_command.md
          - ■ クラスベース:
              - クラス: language/language_php_class_based.md
              - メソッド/データ: language/language_php_class_based_method_data.md
              - データ構造: language/language_php_class_based_data_structure.md
          - ■ ロジック:
              - 検証ロジック: language/language_php_logic_validation.md
              - エラーとエラーハンドリング: language/language_php_logic_error_and_error_handling.md
              - 反復ロジック: language/language_php_logic_iteration.md
              - アルゴリズム: language/language_php_logic_algorithm.md
              - デバッグ: language/language_php_logic_debug.md
          - ■ フレームワーク:
              - ■ Laravel:
                  - コンポーネント: language/language_php_framework_laravel_component.md
                  - ︎Eloquent ORM: language/language_php_framework_laravel_eloquent_orm.md
                  - 専用パッケージ: language/language_php_framework_laravel_package.md
                  - 認証/認可系パッケージ: language/language_php_framework_laravel_package_auth.md
                  - コマンド: language/language_php_framework_laravel_command.md
              - ■ Symfony:
                  - コンポーネント: language/language_php_framework_symfony_component.md
                  - Doctrine ORM: language/language_php_framework_symfony_doctrine_orm.md
          - ■ パッケージ:
              - パッケージ管理: language/language_php_package_management.md
              - SQLパッケージ: language/language_php_package_sql.md
              - ユーティリティパッケージ: language/language_php_package_utility.md
      - ■ JavaScript:
          - ■ プロトタイプベース:
              - プロトタイプ: language/language_js_prototype_based.md
              - メソッド/データ: language/language_js_prototype_based_method_data.md
          - ■ ロジック:
              - 検証ロジック: language/language_js_logic_validation.md
              - 非同期処理ロジック: language/language_js_logic_asynchronous_process.md
              - デバッグ: language/language_js_logic_debug.md
              - 認証: language/language_js_logic_authentication.md
          - ■ フレームワーク:
              - Nuxt.js: language/language_js_framework_nuxtjs.md
              - ■ Vue.js:
                  - Vue.js: language/language_js_framework_vuejs.md
                  - vue-router: language/language_js_framework_vuejs_vuerouter.md
                  - Vuex: language/language_js_framework_vuejs_vuex.md
              - ■ Remix:
                  - Remix: language/language_js_framework_remix.md
                  - コマンド: language/language_js_framework_remix_command.md
          - ■ パッケージ:
              - パッケージ管理: language/language_js_package_management.md
              - SQLパッケージ: language/language_js_package_sql.md
              - ユーティリティパッケージ: language/language_js_package_utility.md
              - Reactパッケージ: language/language_js_package_react.md
          - ■ ブラウザ:
              - ブラウザレンダリング: language/language_js_browser_rendering.md
      - ■ TypeScript:
          - TypeScript: language/language_typescript.md
      - ■ Go:
          - Go: language/language_go.md
          - コマンド: language/language_go_command.md
          - ■ ロジック:
              - データ: language/language_go_logic_data.md
              - メソッド: language/language_go_logic_method.md
              - 検証ロジック: language/language_go_logic_validation.md
          - ■ フレームワーク:
              - Gin: language/language_go_framework_gin.md
          - ■ パッケージ:
              - ビルトインパッケージ: language/language_go_package_builtin.md
              - SQLパッケージ: language/language_go_package_sql.md
              - ユーティリティパッケージ: language/language_go_package_utility.md
      - ■ Python:
          - Python: language/language_python.md
          - ■ フレームワーク:
              - ■ Flask:
                  - コンポーネント: language/language_python_framework_flask_component.md
                  - コンポーネント: language/language_python_framework_flask_component.md
                  - コマンド: language/language_python_framework_flask_command.md
          - ■ パッケージ:
              - パッケージ管理: language/language_python_package_management.md
      - R: language/language_r.md

  - 🧪 テスト:
      - testing/index.md
      - ■ ホワイトボックステスト:
          - ホワイトボックステスト: testing/testing_whitebox.md
          - ■ アプリ (PHP):
              - PHPのテストツール: testing/testing_whitebox_application_php.md
              - ■ 静的解析:
                  - PHPStan: testing/testing_whitebox_application_php_lint_phpstan.md
              - ■ ユニットテスト:
                  - PHPUnit: testing/testing_whitebox_application_php_unit_phpunit.md
                  - Phake: testing/testing_whitebox_application_php_unit_phake.md
          - ■ アプリ (Go):
              - Goのテストツール: testing/testing_whitebox_application_go.md
              - ■ 静的解析:
                  - golangci-lint: testing/testing_whitebox_application_go_lint_golangci_lint.md
              - ■ ユニットテスト:
                  - testify: testing/testing_whitebox_application_go_unit_testify.md
          - ■ インフラ:
              - ■ 静的解析:
                  - 静的解析ツール: testing/testing_whitebox_infrastructure_lint.md
                  - ■ 文法の誤りテスト:
                      - kubeconform: testing/testing_whitebox_infrastructure_lint_grammatical_mistake_kubeconform.md
                  - ■ コード規約違反テスト:
                      - confest: testing/testing_whitebox_infrastructure_lint_code_conventions_violation_confest.md
                      - ■ Kyverno:
                          - Kyverno: testing/testing_whitebox_infrastructure_lint_code_conventions_kyverno.md
                          - リソース定義: testing/testing_whitebox_infrastructure_lint_code_conventions_kyverno_resource_definition.md
                      - ■ OpenPolicyAgent:
                          - OpenPolicyAgent: testing/testing_whitebox_infrastructure_lint_code_conventions_open_policy_agent.md
                  - ■ ベストプラクティス違反テスト:
                      - krr: testing/testing_whitebox_infrastructure_lint_best_practice_violation_krr.md
                      - polaris: testing/testing_whitebox_infrastructure_lint_best_practice_violation_polaris.md
                  - ■ バージョンテスト:
                      - pluto: testing/testing_whitebox_infrastructure_lint_version_pluto.md
                      - nova: testing/testing_whitebox_infrastructure_lint_version_nova.md
                  - ■ 脆弱性診断:
                      - checkov: testing/testing_whitebox_infrastructure_lint_vulnerability_checkov.md
                      - kics: testing/testing_whitebox_infrastructure_lint_vulnerability_diagnosis_kics.md
                      - kube-score: testing/testing_whitebox_infrastructure_lint_vulnerability_diagnosis_kube_score.md
          - ■ アプリ/インフラ両方:
              - ■ 脆弱性診断:
                  - trivy: testing/testing_whitebox_lint_trivy.md
      - ■ ブラックボックステスト:
          - ブラックボックステスト: testing/testing_blackbox.md
          - ■ システムテスト:
              - システムテスト: testing/testing_blackbox_system_test.md
              - JMeter: testing/testing_blackbox_system_test_jmeter.md
              - ChaosMesh: testing/testing_blackbox_system_test_chaos_mesh.md

  - 💻 ハードウェア:
      - hardware/index.md
      - ハードウェア: hardware/hardware.md
      - CPU: hardware/hardware_cpu.md
      - メモリ: hardware/hardware_memory.md
      - ストレージ: hardware/hardware_storage.md
      - 組み込み機器: hardware/hardware_embedded_system.md

  - 🌏 ネットワーク:
      - network/index.md
      - ネットワーク: network/network.md
      - ■ OSI参照モデル:
          - OSI参照モデル: network/network_model_osi.md
          - ■ L5 ~ L7:
              - L5 ~ L7: network/network_model_osi_l5_l7.md
              - HTTP: network/network_model_osi_l5_l7_http.md
          - ■ L4:
              - L4: network/network_model_osi_l4.md
              - ポート: network/network_model_osi_l4_port.md
          - ■ L3:
              - L3: network/network_model_osi_l3.md
              - IPアドレス: network/network_model_osi_l3_ip_address.md
              - ルーター: network/network_model_osi_l3_router.md
          - L2: network/network_model_osi_l2.md
          - L1: network/network_model_osi_l1.md
      - TCP階層モデル: network/network_model_tcp.md

  - 🔐 セキュリティ:
      - security/index.md
      - ■ サイバー攻撃:
          - サイバー攻撃: security/security_cyber_attacks.md
          - マルウェア: security/security_cyber_attacks_malware.md
      - ■ ネットワークセキュリティ:
          - ネットワークセキュリティ: security/security_network.md
          - ■ アプリケーションデータの暗号化技術:
              - アプリケーションデータの暗号化技術: security/security_network_encryption_technology_packet_payload.md
              - 暗号方式: security/security_network_encryption_technology_packet_payload_method.md
              - 暗号化プロトコル: security/security_network_encryption_technology_packet_payload_protocol.md
          - ■ 保管データの暗号化技術:
              - 保管データの暗号化技術: security/security_network_encryption_technology_storage.md
      - ■ 認証/認可:
          - ■ 認証:
              - 認証: security/security_auth_authentication.md
              - HTTP認証: security/security_auth_authentication_http.md
              - Form認証: security/security_auth_authentication_form.md
              - JWT: security/security_auth_authentication_jwt.md
          - ■ 認可:
              - 認可: security/security_auth_authorization.md
          - ■ SSO:
              - SSO: security/security_auth_sso.md
              - OAuth: security/security_auth_sso_oauth.md
              - SAML: security/security_auth_sso_saml.md
              - OIDC: security/security_auth_sso_oidc.md

  - ⛅️ 3大クラウド:
      - cloud_computing/index.md
      - 3大クラウド: cloud_computing/cloud_computing.md
      - ■ AWS:
          - AWS CLI: cloud_computing/cloud_computing_aws_cli.md
          - ■ AWSリソース:
              - アカウント: cloud_computing/cloud_computing_aws_resource_account.md
              - Amplify: cloud_computing/cloud_computing_aws_resource_amplify.md
              - ■ API Gateway:
                  - ︎API Gateway: cloud_computing/cloud_computing_aws_resource_api_gateway.md
                  - ︎API Gatewayに対するymlインポート: cloud_computing/cloud_computing_aws_resource_api_gateway_import.md
              - AutoScaling: cloud_computing/cloud_computing_aws_resource_autoscaling.md
              - Backup: cloud_computing/cloud_computing_aws_resource_backup.md
              - Certificate Manager: cloud_computing/cloud_computing_aws_resource_certificate_manager.md
              - Chatbot: cloud_computing/cloud_computing_aws_resource_chatbot.md
              - CloudFormation: cloud_computing/cloud_computing_aws_resource_cloudformation.md
              - CloudFront: cloud_computing/cloud_computing_aws_resource_cloudfront.md
              - CloudTrail: cloud_computing/cloud_computing_aws_resource_cloudtrail.md
              - CloudWatch: cloud_computing/cloud_computing_aws_resource_cloudwatch.md
              - Code兄弟: cloud_computing/cloud_computing_aws_resource_code.md
              - Control Tower: cloud_computing/cloud_computing_aws_resource_control_tower.md
              - DirectConnect: cloud_computing/cloud_computing_aws_resource_direct_connect.md
              - EC2: cloud_computing/cloud_computing_aws_resource_ec2.md
              - ECR: cloud_computing/cloud_computing_aws_resource_ecr.md
              - ECS: cloud_computing/cloud_computing_aws_resource_ecs.md
              - EFS: cloud_computing/cloud_computing_aws_resource_efs.md
              - EKS: cloud_computing/cloud_computing_aws_resource_eks.md
              - ︎ElastiCache: cloud_computing/cloud_computing_aws_resource_elasticache.md
              - EventBridge: cloud_computing/cloud_computing_aws_resource_eventbridge.md
              - FireLens: cloud_computing/cloud_computing_aws_resource_firelens.md
              - Global Accelerator: cloud_computing/cloud_computing_aws_resource_global_accelerator.md
              - Glue: cloud_computing/cloud_computing_aws_resource_glue.md
              - IAM: cloud_computing/cloud_computing_aws_resource_iam.md
              - Kinesis: cloud_computing/cloud_computing_aws_resource_kinesis.md
              - KMS: cloud_computing/cloud_computing_aws_resource_kms.md
              - ■ Lambda:
                  - Lambda: cloud_computing/cloud_computing_aws_resource_lambda.md
                  - Lambda関数: cloud_computing/cloud_computing_aws_resource_lambda_function.md
              - LB: cloud_computing/cloud_computing_aws_resource_lb.md
              - RDS: cloud_computing/cloud_computing_aws_resource_rds.md
              - Redshift: cloud_computing/cloud_computing_aws_resource_redshift.md
              - Route53: cloud_computing/cloud_computing_aws_resource_route53.md
              - S3: cloud_computing/cloud_computing_aws_resource_s3.md
              - Secrets Manager: cloud_computing/cloud_computing_aws_resource_secrets_manager.md
              - SES: cloud_computing/cloud_computing_aws_resource_ses.md
              - SNS: cloud_computing/cloud_computing_aws_resource_sns.md
              - SQS: cloud_computing/cloud_computing_aws_resource_sqs.md
              - Step Functions: cloud_computing/cloud_computing_aws_resource_step_functions.md
              - STS: cloud_computing/cloud_computing_aws_resource_sts.md
              - Systems Manager: cloud_computing/cloud_computing_aws_resource_systems_manager.md
              - VPC: cloud_computing/cloud_computing_aws_resource_vpc.md
              - WAF: cloud_computing/cloud_computing_aws_resource_waf.md
              - WorkMail: cloud_computing/cloud_computing_aws_resource_work_mail.md
              - X-Ray: cloud_computing/cloud_computing_aws_resource_xray.md
          - ■ プラクティス集:
              - 運用性: cloud_computing/cloud_computing_aws_practices_operability.md
              - 信頼性: cloud_computing/cloud_computing_aws_practices_reliability.md
              - アプリケーションデータ安全性: cloud_computing/cloud_computing_aws_practices_security_packet_payload.md
              - ストレージ安全性: cloud_computing/cloud_computing_aws_practices_security_storage.md
              - コスト最適化: cloud_computing/cloud_computing_aws_practices_cost_optimization.md
          - ツール: cloud_computing/cloud_computing_aws_tools.md
      - ■ Google Cloud:
          - Google Cloud CLI: cloud_computing/cloud_computing_gcp_cli.md
          - ■ Google Cloudリソース:
              - ■ Anthos:
                  - Anthos: cloud_computing/cloud_computing_gcp_resource_anthos.md
                  - アップグレード: cloud_computing/cloud_computing_gcp_resource_anthos_upgrade.md
              - Cloud Logging: cloud_computing/cloud_computing_gcp_resource_cloud_logging.md
              - IAM: cloud_computing/cloud_computing_gcp_resource_iam.md

  - 📦 仮想化:
      - virtualization/index.md
      - 仮想化: virtualization/virtualization.md
      - ■ コンテナ型仮想化:
          - コンテナ: virtualization/virtualization_container.md
          - ■ Docker:
              - Docker: virtualization/virtualization_container_docker.md
              - ストレージ: virtualization/virtualization_container_docker_storage.md
              - ネットワーク: virtualization/virtualization_container_docker_network.md
              - コマンド: virtualization/virtualization_container_docker_command.md
          - ■ Containerd:
              - Containerd: virtualization/virtualization_container_containerd.md
              - コマンド: virtualization/virtualization_container_containerd_command.md

  - ⚙️ IaC:
      - infrastructure_as_code/index.md
      - IaC: infrastructure_as_code/infrastructure_as_code.md
      - ■ 手続き型:
          - ■ Ansible:
              - Ansible: infrastructure_as_code/infrastructure_as_code_ansible.md
              - コマンド: infrastructure_as_code/infrastructure_as_code_ansible_command.md
              - Playbook: infrastructure_as_code/infrastructure_as_code_ansible_playbook.md
              - 設定ファイル: infrastructure_as_code/infrastructure_as_code_ansible_cfg.md
              - Ansible Galaxy: infrastructure_as_code/infrastructure_as_code_ansible_galaxy.md
          - ■ Docker:
              - Dockerfile: infrastructure_as_code/infrastructure_as_code_docker_dockerfile.md
              - コマンド: infrastructure_as_code/infrastructure_as_code_docker_command.md
              - プラクティス集: infrastructure_as_code/infrastructure_as_code_docker_practices.md
      - ■ 宣言型:
          - ■ Docker Compose:
              - コマンド: infrastructure_as_code/infrastructure_as_code_docker_compose_command.md
              - docker-compose.yml: infrastructure_as_code/infrastructure_as_code_docker_compose_yml.md
          - ■ Kaniko:
              - Kaniko: infrastructure_as_code/infrastructure_as_code_docker_kaniko.md
              - 設定ファイル: infrastructure_as_code/infrastructure_as_code_docker_kaniko_conf.md
              - コマンド: infrastructure_as_code/infrastructure_as_code_docker_kaniko_command.md
          - ■ Packer:
              - Packer: infrastructure_as_code/infrastructure_as_code_packer.md
              - template.json: infrastructure_as_code/infrastructure_as_code_packer_template_json.md
          - ■ Serverless Framework:
              - serverless.yml: infrastructure_as_code/infrastructure_as_code_serverless_framework_serverless_yml.md
              - コマンド: infrastructure_as_code/infrastructure_as_code_serverless_framework_serverless_command.md
          - ■ Terraform:
              - コマンド: infrastructure_as_code/infrastructure_as_code_terraform_command.md
              - 設定ファイル: infrastructure_as_code/infrastructure_as_code_terraform_conf.md
              - ■ tfファイル:
                  - ブロック: infrastructure_as_code/infrastructure_as_code_terraform_tf_block.md
                  - モジュール: infrastructure_as_code/infrastructure_as_code_terraform_tf_module.md
              - ■ プロバイダー:
                  - AWSプロバイダー: infrastructure_as_code/infrastructure_as_code_terraform_provider_aws.md
                  - Kubernetesプロバイダー: infrastructure_as_code/infrastructure_as_code_terraform_provider_kubernetes.md
              - CI/CDパイプライン: infrastructure_as_code/infrastructure_as_code_terraform_ci_cd_pipeline.md
              - ■ プラクティス集:
                  - プラクティス集: infrastructure_as_code/infrastructure_as_code_terraform_practices.md
                  - tfstateファイル分割: infrastructure_as_code/infrastructure_as_code_terraform_practices_tfstate.md
          - ■ Vagrant:
              - Vagrantfile: infrastructure_as_code/infrastructure_as_code_vagrant_vagrantfile.md
              - コマンド: infrastructure_as_code/infrastructure_as_code_vagrant_command.md

  - ☸️ K8s:
      - infrastructure_as_code/kubernetes/index.md
      - ■ Kubernetes:
          - Kubernetes: infrastructure_as_code/infrastructure_as_code_kubernetes.md
          - コントロールプレーンコンポーネント: infrastructure_as_code/infrastructure_as_code_kubernetes_component_control_plane.md
          - Nodeコンポーネント: infrastructure_as_code/infrastructure_as_code_kubernetes_component_node.md
          - コマンド: infrastructure_as_code/infrastructure_as_code_kubernetes_command.md
          - ネットワーク: infrastructure_as_code/infrastructure_as_code_kubernetes_network.md
          - クライアントパッケージ: infrastructure_as_code/infrastructure_as_code_kubernetes_client_package.md
      - ■ プラクティス集:
          - プラクティス集: infrastructure_as_code/infrastructure_as_code_kubernetes_practices.md
          - K8sリソース: infrastructure_as_code/infrastructure_as_code_kubernetes_practices_resource.md
          - K8s Cluster: infrastructure_as_code/infrastructure_as_code_kubernetes_practices_cluster.md
          - K8sコンポーネント: infrastructure_as_code/infrastructure_as_code_kubernetes_practices_component.md
      - ■ Kubernetesリソース:
          - Kubernetesリソース: infrastructure_as_code/infrastructure_as_code_kubernetes_resource.md
          - ■ リソース定義:
              - リソース定義: infrastructure_as_code/infrastructure_as_code_kubernetes_resource_definition.md
              - 共通項目: infrastructure_as_code/infrastructure_as_code_kubernetes_resource_definition_common.md
              - AWS EKS: infrastructure_as_code/infrastructure_as_code_kubernetes_resource_definition_aws_eks.md
      - ■ カスタムリソース:
          - カスタムリソース: infrastructure_as_code/infrastructure_as_code_kubernetes_custom_resource.md
          - custom-controller: infrastructure_as_code/infrastructure_as_code_kubernetes_custom_resource_custom_controller.md
          - ロジック: infrastructure_as_code/infrastructure_as_code_kubernetes_custom_resource_logic.md

  - 🌊 K8s開発:
      - infrastructure_as_code/development_tools/index.md
      - ■ 開発環境:
          - ■ Minikube:
              - Minikube: infrastructure_as_code/infrastructure_as_code_kubernetes_environment_development_minikube.md
              - コマンド: infrastructure_as_code/infrastructure_as_code_kubernetes_environment_development_minikube_command.md
          - ■ Kind:
              - コマンド: infrastructure_as_code/infrastructure_as_code_kubernetes_environment_development_kind_command.md
              - 設定ファイル: infrastructure_as_code/infrastructure_as_code_kubernetes_environment_development_kind_conf.md
          - ■ K3D:
              - コマンド: infrastructure_as_code/infrastructure_as_code_kubernetes_environment_development_k3d_command.md
              - 設定ファイル: infrastructure_as_code/infrastructure_as_code_kubernetes_environment_development_k3d_conf.md
          - ■ K3S:
              - コマンド: infrastructure_as_code/infrastructure_as_code_kubernetes_environment_development_k3s_command.md
              - 設定ファイル: infrastructure_as_code/infrastructure_as_code_kubernetes_environment_development_k3s_conf.md
      - ■ 本番環境:
          - ■ VCluster:
              - VCluster: infrastructure_as_code/infrastructure_as_code_kubernetes_environment_production_vcluster.md
      - ■ マニフェスト管理:
          - ■ Helm:
              - Helm: infrastructure_as_code/infrastructure_as_code_kubernetes_manifests_management_helm.md
              - ■ コマンド:
                  - コマンド: infrastructure_as_code/infrastructure_as_code_kubernetes_manifests_management_helm_command.md
                  - helmプラグイン: infrastructure_as_code/infrastructure_as_code_kubernetes_manifests_management_helm_command_plugin.md
              - ■ チャート:
                  - チャート: infrastructure_as_code/infrastructure_as_code_kubernetes_manifests_management_helm_chart.md
                  - 共通項目: infrastructure_as_code/infrastructure_as_code_kubernetes_manifests_management_helm_chart_common.md
                  - 関数: infrastructure_as_code/infrastructure_as_code_kubernetes_manifests_management_helm_chart_function.md
              - プラクティス集: infrastructure_as_code/infrastructure_as_code_kubernetes_manifests_management_helm_practices.md
              - ■ Helmfile:
                  - Helmfile: infrastructure_as_code/infrastructure_as_code_kubernetes_manifests_management_helm_helmfile.md
                  - コマンド: infrastructure_as_code/infrastructure_as_code_kubernetes_manifests_management_helm_helmfile_command.md
          - ■ Kustomize:
              - Kustomize: infrastructure_as_code/infrastructure_as_code_kubernetes_manifests_management_kustomize.md
              - コマンド: infrastructure_as_code/infrastructure_as_code_kubernetes_manifests_management_kustomize_command.md
              - プラクティス集: infrastructure_as_code/infrastructure_as_code_kubernetes_manifests_management_kustomize_practices.md

  - ⏬ K8sアドオン:
      - infrastructure_as_code/kubernetes_addon/index.md
      - ■ コントロールプレーン系:
          - admission-controllers: infrastructure_as_code/infrastructure_as_code_kubernetes_addon_component_control_plane_admission_controllers.md
      - ■ Ingressコントローラー系:
          - Ingressコントローラー: infrastructure_as_code/infrastructure_as_code_kubernetes_addon_ingress_controller.md
          - ■ AWS Load Balancerコントローラー:
              - AWS Load Balancerコントローラー: infrastructure_as_code/infrastructure_as_code_kubernetes_addon_ingress_controller_alb.md
              - リソース定義: infrastructure_as_code/infrastructure_as_code_kubernetes_addon_ingress_controller_alb_resource_definition.md
          - ■ Nginx Ingressコントローラー:
              - Nginx Ingressコントローラー: infrastructure_as_code/infrastructure_as_code_kubernetes_addon_ingress_controller_nginx.md
              - リソース定義: infrastructure_as_code/infrastructure_as_code_kubernetes_addon_ingress_controller_nginx_resource_definition.md
      - ■ ハードウェアリソース管理系:
          - addon-resizer: infrastructure_as_code/infrastructure_as_code_kubernetes_addon_hardware_resource_management_addon_resizer.md
          - cluster-autoscaler: infrastructure_as_code/infrastructure_as_code_kubernetes_addon_hardware_resource_management_cluster_autoscaler.md
          - descheduler: infrastructure_as_code/infrastructure_as_code_kubernetes_addon_hardware_resource_management_descheduler.md
          - metrics-server: infrastructure_as_code/infrastructure_as_code_kubernetes_addon_hardware_resource_management_metrics_server.md
          - ■ Karpenter:
              - Karpenter: infrastructure_as_code/infrastructure_as_code_kubernetes_addon_hardware_resource_management_karpenter.md
              - リソース定義: infrastructure_as_code/infrastructure_as_code_kubernetes_addon_hardware_resource_management_karpenter_resource_definition.md
      - ■ ネットワーク系:
          - CNI: infrastructure_as_code/infrastructure_as_code_kubernetes_addon_network_cni.md
          - Cilium: infrastructure_as_code/infrastructure_as_code_kubernetes_addon_network_cilium.md
          - ExternalDNS: infrastructure_as_code/infrastructure_as_code_kubernetes_addon_network_external_dns.md
      - ■ Secret系:
          - ■ SecretsストアCSIドライバー:
              - SecretsストアCSIドライバー: infrastructure_as_code/infrastructure_as_code_kubernetes_addon_secret_secrets_store_csi_driver.md
              - ︎リソース定義: infrastructure_as_code/infrastructure_as_code_kubernetes_addon_secret_secrets_store_csi_driver_resource_definition.md
          - ■ ExternalSecretsOperator:
              - ExternalSecretsOperator: infrastructure_as_code/infrastructure_as_code_kubernetes_addon_secret_external_secrets_oprator.md
      - ■ クラウドプロバイダー系:
          - ■ AWS EKSアドオン:
              - AWS EKSアドオン: infrastructure_as_code/infrastructure_as_code_kubernetes_addon_cloud_provider_aws_eks.md
              - AWS EBS CSIドライバー: infrastructure_as_code/infrastructure_as_code_kubernetes_addon_cloud_provider_aws_eks_ebs_csi_driver.md
              - AWS VPC CNI: infrastructure_as_code/infrastructure_as_code_kubernetes_addon_cloud_provider_aws_eks_vpc_cni.md
              - AWS OpenTelemetry Collector Operator: infrastructure_as_code/infrastructure_as_code_kubernetes_addon_cloud_provider_aws_eks_open_telemetry_collector_operator.md

  - ♾️ DevOps:
      - devops/index.md
      - ■ DevOps:
          - DevOps: devops/devops.md
          - ■ SREing:
              - SREing: devops/devops_sreing.md
              - アンチパターン: devops/devops_sreing_antipattern.md
          - ■ Platform Engineering:
              - Platform Engineering: devops/devops_platform_engineering.md
      - ■ 技術的要素:
          - ■ ドキュメンテーション:
              - ドキュメンテーション: devops/devops_documentation.md
              - Mermaid: devops/devops_documentation_mermaid.md
      - ■ 技術的要素:
          - 文化: devops/devops_culture.md

  - 🔄 CI/CD:
      - devops/cicd/index.md
      - CI/CD: devops/devops_cicd.md
      - デプロイ手法: devops/devops_cicd_deploy.md
      - ■ CIツール:
          - GitHub Actions: devops/devops_cicd_ci_github_actions.md
          - GitLab CI: devops/devops_cicd_ci_gitlab_ci.md
          - Capistrano: devops/devops_cicd_ci_capistrano.md
          - ■ CircleCI:
              - CircleCI: devops/devops_cicd_ci_circleci.md
              - config.yml: devops/devops_cicd_ci_circleci_config_yml.md
              - orbs: devops/devops_cicd_ci_circleci_orbs.md
              - プラクティス集: devops/devops_cicd_ci_circleci_practices.md
          - ■ Skaffold:
              - skaffold.yaml: devops/devops_cicd_ci_skaffold_yaml.md
              - コマンド: devops/devops_cicd_ci_skaffold_command.md
      - ■ CDツール:
          - ■ ArgoCD:
              - ArgoCD: devops/devops_cicd_cd_argocd.md
              - コマンド: devops/devops_cicd_cd_argocd_command.md
              - プラクティス集: devops/devops_cicd_cd_argocd_practices.md
              - ■ リソース定義:
                  - リソース定義: devops/devops_cicd_cd_argocd_resource_definition.md
                  - 共通項目: devops/devops_cicd_cd_argocd_resource_definition_common.md
                  - プラグイン: devops/devops_cicd_cd_argocd_resource_definition_plugin.md
                  - 認証/認可系: devops/devops_cicd_cd_argocd_resource_definition_auth.md
                  - ConfigMap系: devops/devops_cicd_cd_argocd_resource_definition_configmap.md
                  - Secret系: devops/devops_cicd_cd_argocd_resource_definition_secret.md
                  - Job系: devops/devops_cicd_cd_argocd_resource_definition_job.md
          - ■ Argo Rollouts:
              - Argo Rollouts: devops/devops_cicd_cd_argorollouts.md
              - リソース定義: devops/devops_cicd_cd_argorollouts_resource_definition.md
      - ■ 自動レビューツール:
          - github-comment: devops/devops_cicd_auto_review_github_comment.md
          - reviewdog: devops/devops_cicd_auto_review_reviewdog.md
          - tfnotify: devops/devops_cicd_auto_review_tfnotify.md

  - 🔎 可観測性:
      - observability/index.md
      - 可観測性: observability/observability.md
      - ■ 監視:
          - 監視: observability/observability_monitoring.md
          - オンコール: observability/observability_monitoring_oncall.md
          - インシデント管理: observability/observability_monitoring_incident_management.md
          - サービスレベル: observability/observability_monitoring_service_level.md
      - ■ テレメトリー:
          - ログ: observability/observability_telemetry_log.md
          - メトリクス: observability/observability_telemetry_metrics.md
          - 分散トレース: observability/observability_telemetry_trace.md
      - ■ テレメトリー収集ツール:
          - テレメトリー収集ツール: observability/observability_telemetry_tools.md
          - ■ Datadog:
              - datadogエージェントの設定: observability/observability_telemetry_tools_datadog_agent_conf.md
              - 監視: observability/observability_telemetry_tools_datadog_monitoring.md
              - インテグレーション: observability/observability_telemetry_tools_datadog_integration.md
              - ■ テレメトリー:
                  - メトリクス: observability/observability_telemetry_tools_datadog_metrics.md
                  - ログ: observability/observability_telemetry_tools_datadog_log.md
                  - 分散トレース: observability/observability_telemetry_tools_datadog_trace.md
                  - テレメトリー間の紐づけ: observability/observability_telemetry_tools_datadog_telemetry_association.md
                  - ■ クライアントパッケージ:
                      - 分散トレース: observability/observability_telemetry_tools_datadog_client_package_trace.md
          - ■ FluentBit/Fluentd:
              - FluentBit/Fluentd: observability/observability_telemetry_tools_fluentbit_fluentd.md
              - ■ FluentBit:
                  - 設定ファイル: observability/observability_telemetry_tools_fluentbit_conf.md
                  - コマンド: observability/observability_telemetry_tools_fluentbit_command.md
                  - リソース定義: observability/observability_telemetry_tools_fluentbit_resource_definition.md
          - ■ Grafana:
              - Grafana: observability/observability_telemetry_tools_grafana.md
              - ■ リソース定義:
                  - リソース定義: observability/observability_telemetry_tools_grafana_resource_definition.md
                  - ConfigMap: observability/observability_telemetry_tools_grafana_resource_definition_configmap.md
                  - ダッシュボード: observability/observability_telemetry_tools_grafana_resource_definition_dashboard.md
          - ■ Jaeger:
              - Jaeger: observability/observability_telemetry_tools_jaeger.md
          - ■ Kiali:
              - Kiali: observability/observability_telemetry_tools_kiali.md
              - ■ リソース定義:
                  - ConfigMap系: observability/observability_telemetry_tools_kiali_resource_definition_configmap.md
          - ■ OpenTelemetry:
              - OpenTelemetry: observability/observability_telemetry_tools_open_telemetry.md
              - リソース定義: observability/observability_telemetry_tools_open_telemetry_resource_definition.md
              - 計装:
                  - 計装: observability/observability_telemetry_tools_open_telemetry_client_package_instrumentation.md
                  - ■ 分散トレース:
                      - クライアントパッケージ: observability/observability_telemetry_tools_open_telemetry_client_package_trace.md
                      - Go: observability/observability_telemetry_tools_open_telemetry_client_package_trace_go.md
                      - Python: observability/observability_telemetry_tools_open_telemetry_client_package_trace_python.md
              - ■ OpenTelemetry Collector:
                  - OpenTelemetry Collector: observability/observability_telemetry_tools_open_telemetry_collector.md
                  - 設定ファイル: observability/observability_telemetry_tools_open_telemetry_collector_config.md
          - ■ Prometheus:
              - Prometheus: observability/observability_telemetry_tools_prometheus.md
              - 設定ファイル: observability/observability_telemetry_tools_prometheus_conf.md
              - リソース定義: observability/observability_telemetry_tools_prometheus_resource_definition.md
              - ■ Exporter:
                    - Exporter: observability/observability_telemetry_tools_prometheus_exporter.md
                    - Blackbox Exporter: observability/observability_telemetry_tools_prometheus_exporter_blackbox_exporter.md
                    - kube-state-metrics: observability/observability_telemetry_tools_prometheus_exporter_kube_state_metrics.md
                    - Node Exporter: observability/observability_telemetry_tools_prometheus_exporter_node_exporter.md
              - ■ メトリクス:
                  - メトリクス: observability/observability_telemetry_tools_prometheus_metrics.md
                  - PromQL: observability/observability_telemetry_tools_prometheus_metrics_promql.md
                  - クライアントパッケージ: observability/observability_telemetry_tools_prometheus_metrics_client_package.md
          - ■ Googleアプリ:
              - Googleアナリティクス: observability/observability_telemetry_tools_google_analytics.md
              - Googleサーチコンソール: observability/observability_telemetry_tools_google_search_console.md
      - ■ インシデント管理ツール:
          - PagerDuty: observability/observability_incident_management_pagerduty.md

  - 👥 開発手法:
      - software_development_methodology/index.md
      - 開発手法論: software_development_methodology/software_development_methodology.md
      - 組織論: software_development_methodology/software_development_organization.md
      - OSSコントリビューション: software_development_methodology/software_development_oss_contribution.md
      - ■ バージョン管理:
          - ■ Git:
              - コマンド: software_development_methodology/software_development_git_command.md
              - GitHub: software_development_methodology/software_development_git_github.md
      - ■ プロジェクト管理:
          - プロジェクト管理: software_development_methodology/software_development_project_management.md
          - タスク管理: software_development_methodology/software_development_project_management_task_management.md
          - 見積もり: software_development_methodology/software_development_project_management_estimate.md

